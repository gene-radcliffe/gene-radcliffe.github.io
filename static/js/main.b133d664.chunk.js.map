{"version":3,"sources":["Resume.pdf","logo.svg","Slides.js","data.js","Project.js","Portfolio.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","default_style","display","Slides","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","style_props","children","current_slide","slide_count","moveToNextSlide","bind","assertThisInitialized","moveToPreviousSlide","cloned_children","React","Children","map","child","cloneElement","style","className","setState","count","console","log","index","child_index","react_default","a","createElement","onClick","config","buttons","Fragment","id","renderNavigatorPreviousButton","renderSlide","renderNavigatorNextButton","carousel","renderRegular","Component","data","getRepos","request","get","process","set","concat","then","res","body","Header","styled","h2","_templateObject","slidesStyle","allowedRepos","Project","repos","isLoading","_this2","filter","repo","rep","ar","name","_this$state","src_Slides","src","href","library","add","fab","faEnvelope","faChevronDown","StyledLink","Link","Portfolio_templateObject","Home","gotoProjects","top","document","getElementById","offsetTop","window","scrollBy","left","behavior","Hero","Span","hero_sd_font","Portfolio_SocialLinks","size","to","react_fontawesome_index_es","icon","src_Project","span","_templateObject2","div","_templateObject3","fontSize","SocialLinks","target","Portfolio","scrollToProject","HashRouter","Route","exact","path","component","renderResume","width","innerWidth","height","innerHeight","resume","Boolean","location","hostname","match","ReactDOM","render","src_Portfolio","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b133d664.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Resume.55390b4c.pdf\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport 'spectre.css/dist/spectre.css';\nimport 'spectre.css/dist/spectre-icons.css'\nimport ReactDom from 'react-dom'\n\nconst default_style={\n    display: 'block',\n}\n\nclass Slides extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            style_props: null,\n            children: null,\n            current_slide:null,\n            slide_count:null,\n        }\n        this.moveToNextSlide = this.moveToNextSlide.bind(this);\n        this.moveToPreviousSlide= this.moveToPreviousSlide.bind(this);\n\n    }\n    componentDidUpdate(){\n        \n    }\n    componentDidMount(){\n        \n        const cloned_children = React.Children.map(this.props.children, child =>{\n            return React.cloneElement(child, {\n                style: default_style,\n                className: \"Slide\"\n            })\n        })\n        \n        this.setState({children: cloned_children,\n                      current_slide: 0,\n                      slide_count: React.Children.count(cloned_children)\n        })\n        \n    }\n    moveToPreviousSlide(){\n        if(this.state.current_slide == 0){\n            console.log(\"return\")\n            return\n        }\n       \n        if(this.state.current_slide >= 1){\n            console.log(\"setting\")\n            this.setState(state =>{\n                return{current_slide: state.current_slide -1 }\n            }) \n        }\n        \n    }\n    moveToNextSlide(){\n       \n        if(this.state.current_slide == this.state.slide_count-1){\n           \n            return\n        }else{\n           \n            this.setState( (state)=>{\n                return {current_slide: (state.current_slide + 1)}\n            })\n        }\n        \n        \n       \n    }\n\n    renderSlide(){\n        var index = this.state.current_slide\n        const slide = React.Children.map(this.state.children, (child, child_index) =>{\n            if(index == child_index){\n                return child;\n            }\n        })\n\n        return slide\n    }\n\n    renderNavigatorNextButton(){\n       \n        return <button className=\"btn\" onClick={this.moveToNextSlide}><i className=\"icon icon-arrow-right\"></i></button>  \n        \n    }\n    renderNavigatorPreviousButton(){\n        return <button className=\"btn\" onClick={this.moveToPreviousSlide}><i className=\"icon icon-arrow-left\"></i></button> \n\n    }\n    \n    \n    renderRegular(){\n        return this.state.children\n    }\n    \n    render(){\n        if(this.props.config.buttons == true){\n            return(\n                <React.Fragment>\n                    <div id=\"slides-container\">\n                    <div>{this.renderNavigatorPreviousButton()}</div>\n                    <div>{this.renderSlide()}</div>\n                    <div>{this.renderNavigatorNextButton()}</div>\n                    </div>   \n                </React.Fragment>\n            )\n        }\n        if(this.props.config.carousel == false){\n            return(\n                <React.Fragment>\n                    <div id=\"slides-container\">\n                    {this.renderRegular()}\n                    </div>   \n                </React.Fragment>\n            )\n        }\n    }\n}\n\nexport default Slides","import request from 'superagent/superagent.js'\nimport dotenv from 'dotenv'\nlet userToken\n\n\nconst data = {\n  \n  getRepos: (state) => {\n    return request.get(process.env.REACT_APP_GH_REPO_API)\n    .set('Authorization', `Bearer ${process.env.REACT_APP_GH_TOKEN}`)\n    .set('Accept', 'application/json')\n    .then(res=>{\n      let repos = res.body\n      return (repos)\n    })\n  }\n}\nexport default data\n","import React, {Component} from \"react\"\nimport styled from \"styled-components\"\nimport 'spectre.css/dist/spectre.css';\nimport Slides from \"./Slides.js\"\nimport data from './data'\n\nconst Header = styled.h2`\ncolor:black;\nfont-family: 'Rajdhani', sans-serif;\n`\nconst slidesStyle = {\n    buttons: false,\n    carousel: false,\n}\nconst allowedRepos = ['GloveBox','Analog-Clock', 'MicrobloggingAPI', 'RadImageResizerApp', 'RubyBlackJack', \"work-portfolio-react\"]\n\nfunction Card(props){\n    return(\n        <div key={props.repo.key}>{props.repo.name}</div>\n    )\n}\n\nclass Project extends Component{\n\n    constructor(props){\n        super(props)\n        this.state ={\n            repos: [],\n            isLoading: true,\n        } \n        \n    }\n    componentDidMount(){\n        \n        \n        \n    }\n    componentDidUpdate(){\n      \n    }\n\n    loadGitHubRepos(){\n        console.log(\"hi\")\n        data.getRepos()\n        .then(repos => this.setState({repos: repos, isLoading:false}))\n    }\n    \n    getAllowedRepos(repos){\n        let allowed = repos.filter(repo=>{\n            let rep =allowedRepos.map(ar =>{\n                if(repo.name == ar){                   \n                    rep = repo\n                }\n            })\n            \n            return rep\n        })\n    }\n\n    render(){\n        const{repos, isLoading}= this.state;\n        if(isLoading == false){\n            return <div><p className=\"loading loading-lg h1 \">Loading Github Repos</p></div>\n        }\n        \n       \n        return(\n            <React.Fragment>\n                <Header>Projects</Header>\n                <Slides config={slidesStyle}>\n                    <div>\n                    <div className=\"card project-card\">\n                        \n                        <div className=\"class-header project-card_header\">\n                            <div className=\"card-title h3\">GloveBox</div>\n                            <div className=\"card-subtitle text-gray\">Technologies: Ruby on Rails, Javascript, Onsen CSS & AWS S3</div>\n                        </div>\n                        <div className=\"card-body project-card_body\">Glovebox provides users with a practical and efficient way of keeping track of vehicle maintenance. Declutter your glovebox and still keep the records that can increase your car's resale value!</div>\n                        \n                        \n                        <div className=\"card-image project-card_image\"><img src=\"https://s3.amazonaws.com/generadcliffe/images/glovebox.png\" /></div>\n                        <div className=\"card-footer project-card_footer\">\n                            <a href=\"http://glovebox.tools\" className=\"btn btn-primary project-link\">Live Site</a>\n                             <a href=\"https://gene-radcliffe.github.io/GloveBox/\" className=\"btn btn-primary project-link\">Github</a>\n                        </div>\n                    </div>\n                    </div>\n                    <div>\n                    <div className=\"card project-card\">\n                        \n                        <div className=\"class-header project-card_header\">\n                            <div className=\"card-title h3\">ImageResizerTool</div>\n                            <div className=\"card-subtitle text-gray\">Technologies: Java</div>\n                        </div>\n                        <div className=\"card-body project-card_body\">ImageResizerTool is a Java based image resizer and date stamp utility. The tool can resize images into three sizes, and the tool can read exif data embedded in the images to stamp it over the image file.</div>\n                        \n                        \n                        <div className=\"card-image project-card_image\"><img src=\"https://s3.amazonaws.com/generadcliffe/images/imageresizertool.png\" /></div>\n                        <div className=\"card-footer project-card_footer\">\n                           \n                             <a href=\"https://github.com/gene-radcliffe/ImageResizerApp\" className=\"btn btn-primary project-link\">Github</a>\n                        </div>\n                    </div>\n                    </div>\n                </Slides>\n\n            </React.Fragment>\n        )\n    }\n\n}\n\n\nexport default Project;","import React, { Component } from 'react';\nimport {HashRouter as Router, Route, Link} from \"react-router-dom\"\nimport logo from './logo.svg';\nimport resume from './Resume.pdf'\nimport './App.css';\nimport styled from 'styled-components';\nimport 'spectre.css/dist/spectre.css';\nimport Project from  './Project.js';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { faEnvelope, faChevronDown }  from '@fortawesome/free-solid-svg-icons' \nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nlibrary.add(fab, faEnvelope, faChevronDown)\n\nconst StyledLink = styled(Link)`\n    margin: 0.2rem;\n    \n    &:link, &:visited{\n    \n        color: white;\n        text-decoration: none;\n        background-color: rgba(47, 97, 162,0.7);\n        padding: 0.5rem;\n    }\n    &:hover{\n        text-decoration: none;\n\n        background-color: rgba(47, 97, 162,1);\n        \n        \n        color: white;\n    }\n`\nfunction Home(){\n   const links_style={\n       textDecoration: 'none',\n        backgroundColor: 'rgb(8,3,42)',\n        color:'white',\n   }\n    function gotoProjects(){\n        let project = document.getElementById(\"project\")\n        let top = project.offsetTop;\n        window.scrollBy({ \n            top: top, \n            left: 0, \n            behavior: 'smooth' \n          });\n    }\n    return(\n        \n    <div className=\"home-index\">\n        <div className=\"hero-header\">\n            \n            <Hero className=\"hero-box col-12\">\n                <Span className=\" hero-box_name text-center\">gene radcliffe</Span>\n                <Span className=\"hero-box_text text-center\" style={hero_sd_font}>software developer</Span> \n                <div className=\"hero-social col-2\"  >\n                    <SocialLinks  size=\"lg\"/>\n                </div>\n                <div className=\"site-links text-center col-4\">\n                <StyledLink to=\"/resume\">Resume</StyledLink>\n                <StyledLink onClick={gotoProjects} to=\"/\">Projects</StyledLink>\n                </div>\n            </Hero>\n            <div className=\"arrow\"> <FontAwesomeIcon onClick={gotoProjects} size=\"lg\" icon=\"chevron-down\"/></div>\n        </div> \n        \n        <div id=\"project\" className=\"projects\">\n            <Project  />\n        </div>\n    </div>\n    \n    )\n}\nconst Span = styled.span`\n    color:white;\n    font-family: 'Rajdhani', sans-serif;\n    display: block;\n`\nconst Hero = styled.div`\n    \n    background: rgba(8,3,42,0.09);\n`\nconst hero_sd_font={\n    fontSize:'24px'\n}\n\nconst SocialLinks = props =>{\n    let size = props.size\n    return(\n        <React.Fragment>\n            <a className=\"icons col-4\" href=\"https://github.com/gene-radcliffe\"><FontAwesomeIcon className=\"social-icons\" size={size} icon={['fab', 'github']} /></a>\n            <a className=\"icons col-4\" href=\"https://www.linkedin.com/in/gene-radcliffe-50203b13/\"> <FontAwesomeIcon className=\"social-icons\"  size={size} icon={['fab', 'linkedin']}/></a>\n            <a className=\"icons col-4\" href=\"mailto:g_radcliffe82@hotmail.com\" target=\"_top\"> <FontAwesomeIcon className=\"social-icons\" size={size} icon={['fa', 'envelope']}/></a>\n        </React.Fragment>\n    )   \n}\n\nclass Portfolio extends Component{\n    constructor(props){\n        super(props)\n\n        this.scrollToProject = this.scrollToProject.bind(this)\n    }\n    scrollToProject(){\n       console.log(\"hi\")\n    }\n\n    \n    render(){\n        \n        return(\n        \n            <Router>\n                <div id=\"index\">\n                \n                    <Route exact path=\"/\" component={Home}></Route>\n                    <Route path=\"/resume\" component={this.renderResume}></Route>\n                </div>\n            </Router>\n\n        \n\n        );\n    }\n    \n    renderResume(){\n        let width = window.innerWidth\n        let height = window.innerHeight\n\n        return(\n            <embed src={resume} width={width} height={height} />\n\n        )\n    }  \n    \n}\n\nexport default Portfolio;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Portfolio from './Portfolio';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Portfolio />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}